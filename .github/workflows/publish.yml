name: 🚀 Publish Mehedi.EventBus.Kafka to NuGet

on:
  workflow_dispatch:
  push:
    branches: 
      - master
    #paths:
    #  - 'src/Mehedi.EventBus.Kafka/**'

  workflow_run:
    # ✅ This will trigger the publish workflow only after the "Build" workflow completes
    workflows: ["Build and Test"] # Name of the build workflow (must match exactly)
    types:
      - completed # Trigger when the Build workflow finishes (success or failure)
      
jobs:
  publish:
    name: 📦 Publish to NuGet
    # ✅ Runs only if the Build workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Required for a specific dotnet version that doesn't come with ubuntu-latest / windows-latest
      # Visit bit.ly/2synnZl to see the list of SDKs that are pre-installed with ubuntu-latest / windows-latest
      - name: ⚙️ Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.x

      # Increment the version
      - name: 🔢 Bump build version
        id: bump
        uses: vers-one/dotnet-project-version-updater@v1.6
        with:
          file: "src/Mehedi.EventBus.Kafka/Mehedi.EventBus.Kafka.csproj"
          version: bump-build

      - name: ✅ Commit updated version
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git config --global credential.helper store
          
          git add .
          git commit -m "Bump project version to ${{ steps.bump.outputs.newVersion }}"
          git push 

      # 📦 Pack NuGet package with license and symbols
      - name: Pack NuGet package
        run: |
          dotnet pack src/Mehedi.EventBus.Kafka/Mehedi.EventBus.Kafka.csproj \
            --configuration Release \
            -o ./artifacts \
            /p:IncludeSymbols=true \
            /p:IncludeSource=true \
            /p:PackageLicenseExpression=MIT \
            /p:PackageLicenseFile=LICENSE
      
      # 📤 Push NuGet package
      - name: Push NuGet package
        run: dotnet nuget push ./artifacts/*.nupkg \
              --api-key ${{ secrets.NUGET_API_KEY }} \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
